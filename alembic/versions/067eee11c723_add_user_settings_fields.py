"""Add User settings fields

Revision ID: 067eee11c723
Revises: 8e43cbf70467
Create Date: 2025-05-28 20:53:39.879967

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "067eee11c723"
down_revision: Union[str, None] = "8e43cbf70467"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_genre",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genre.id"],
            name=op.f("fk_user_genre_genre_id_genre"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_user_genre_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_id", "genre_id", name=op.f("pk_user_genre")),
    )
    op.create_table(
        "user_title_type",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("title_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["title_type_id"],
            ["titletype.id"],
            name=op.f("fk_user_title_type_title_type_id_titletype"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_user_title_type_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "title_type_id", name=op.f("pk_user_title_type")
        ),
    )
    op.add_column(
        "user",
        sa.Column(
            "finished_first_setup",
            sa.Boolean(),
            nullable=False,
            server_default=sa.false(),
        ),
    )
    op.alter_column("user", "finished_first_setup", server_default=None)
    op.add_column(
        "user",
        sa.Column(
            "minimum_movie_rating", sa.Integer(), nullable=False, server_default="7"
        ),
    )
    op.alter_column("user", "minimum_movie_rating", server_default=None)
    op.add_column(
        "user",
        sa.Column(
            "minimum_movie_votes", sa.Integer(), nullable=False, server_default="10000"
        ),
    )
    op.alter_column("user", "minimum_movie_votes", server_default=None)
    op.add_column(
        "user",
        sa.Column(
            "requires_all_selected_genres",
            sa.Boolean(),
            nullable=False,
            server_default=sa.false(),
        ),
    )
    op.alter_column("user", "requires_all_selected_genres", server_default=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "requires_all_selected_genres")
    op.drop_column("user", "minimum_movie_votes")
    op.drop_column("user", "minimum_movie_rating")
    op.drop_column("user", "finished_first_setup")
    op.drop_table("user_title_type")
    op.drop_table("user_genre")
    # ### end Alembic commands ###
